{"version":3,"sources":["components/Navbar.js","components/Characters.js","components/Pagination.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","Menu","inverted","Container","to","Item","name","Characters","data","loading","useState","search","setSearch","filteredPeople","setfilteredPeople","useEffect","filter","people","toLowerCase","includes","align","class","type","placeholder","onChange","e","target","value","Grid","columns","map","i","Column","Card","Content","Popup","trigger","Header","position","Description","height","mass","hair_color","gender","birth_year","Pagination","peoplePerPage","totalPeople","paginate","pageNumbers","Math","ceil","push","tabindex","number","onClick","href","className","App","props","setCharacters","setLoading","currentPage","setCurrentPage","a","fetch","res","json","results","fetchCharacter","indexOfLastPeople","indexOfFirstPeople","currentPeople","slice","Dimmer","active","Loader","exact","path","length","pageNumber","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20791f2a.chunk.js","sourcesContent":["import React from 'react';\nimport { Menu, Container } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nexport default function Navbar() {\n    return (\n        <Menu inverted>\n            <Container>\n                <Link to='/characters'>\n                    <Menu.Item name='Welcome to Star Wars Characters API...!!!!' />\n                </Link>\n            </Container>   \n        </Menu>\n    )\n}\n","import React, {useState, useEffect} from 'react';\nimport { Card, Grid } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Popup } from 'semantic-ui-react';\n\nexport default function Characters({data, loading}) {\n    \n    const [search, setSearch] = useState('');\n    const [filteredPeople, setfilteredPeople] = useState([]);\n    \n    useEffect( () => {\n        setfilteredPeople (\n            data.filter( (people) => {\n                if (search == null){\n                    return people\n                }else if (people.name.toLowerCase().includes(search.toLowerCase())){\n                    return people\n                }\n            })\n        )\n\n    }, [search, data])\n\n    if (loading) {\n        return <p>Loading ...</p>\n    }\n\n    return (\n        <div align='center'>\n            <h3><i> Enter name here to be searched! </i></h3>\n            <input\n                class='form-control-lg'\n                type = 'text'\n                placeholder='Search...'\n                onChange={ e => setSearch(e.target.value)}\n            />\n            <p></p>\n            <Grid columns={2}>\n                {filteredPeople.map((people, i) => {\n                    return (\n                        <Grid.Column key={i}>\n                            <Card >\n                                <Card.Content>\n                                    <Popup\n                                        trigger={<Card.Header align='center'>{people.name}</Card.Header>}\n                                        key={i}\n                                        position='right center'\n                                            \n                                    >\n                                    <Card.Description>\n                                        <strong>Height</strong>\n                                        <p>{people.height}</p>\n                                        <strong>Mass</strong>\n                                        <p>{people.mass}</p>\n                                        <strong>Hair-color</strong>\n                                        <p>{people.hair_color}</p>\n                                        <strong>Gender</strong>\n                                        <p>{people.gender}</p>\n                                        <strong>Birthday</strong>\n                                        <p>{people.birth_year}</p>\n                                        </Card.Description> \n                                    </Popup> \n                                </Card.Content>\n                            </Card>\n                        </Grid.Column>\n                    )  \n                    \n                })}\n            </Grid>\n        </div>\n    );\n}\n","import React from 'react';\nimport './Pagination.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Pagination = ({peoplePerPage, totalPeople, paginate}) => {\n    const pageNumbers = [];\n\n    for (let i = 1; i <= Math.ceil(totalPeople/peoplePerPage); i++){\n        pageNumbers.push(i);\n    }\n    return (\n        <nav align='center'>\n            <p></p>\n            <ul class=\"pagination pg-blue justify-content-center\">\n                <li class=\"page-item disabled\">\n                <a class=\"page-link\" tabindex=\"-1\">Previous</a>\n                </li>\n                {pageNumbers.map(number => (\n                    <li key={number} class='page-item'>\n                        <a onClick={() => paginate(number)} href='!#' className='page-link'>\n                            {number}\n                        </a>\n                    </li>\n                ))}\n                <li class=\"page-item disabled\">\n                <a class=\"page-link\">Next</a>\n                </li>\n            </ul>\n        </nav>\n    );\n};\n\nexport default Pagination;\n\n    \n","import './App.css';\nimport React, {useState, useEffect} from 'react';\nimport Navbar from './components/Navbar';\nimport {BrowserRouter as Router } from 'react-router-dom';\nimport {Container, Dimmer, Loader } from 'semantic-ui-react';\nimport Characters from './components/Characters';\nimport Pagination from './components/Pagination';\n\nconst App = (props) => {\n  const [people, setCharacters] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [peoplePerPage] = useState(6);\n\n  useEffect(() =>{\n    async function fetchCharacter() {\n      let res = await fetch('https://swapi.dev/api/people/?format=json');\n      let data = await res.json();\n      setCharacters(data.results);\n      setLoading(false);  \n    }\n\n    fetchCharacter();\n    \n  }, []);\n\n  const indexOfLastPeople = currentPage * peoplePerPage;\n  const indexOfFirstPeople = indexOfLastPeople - peoplePerPage;\n  const currentPeople = people.slice(indexOfFirstPeople, indexOfLastPeople);\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return (\n    <div>\n      <Router>\n        <Navbar />\n          <Container>\n\n            {loading ? (\n              <Dimmer active inverted>\n                <Loader>Loading</Loader>\n              </Dimmer>\n            ) : (\n              <Router exact path='/characters'>\n                <h1 align='center'><strong>Star Wars Characters</strong></h1>\n                <Characters data={currentPeople}/>\n                <Pagination  \n                    peoplePerPage={peoplePerPage}\n                    totalPeople={people.length}\n                    paginate={paginate}  \n                  />  \n              </Router>\n            )}\n          \n          </Container>\n      </Router>  \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//import 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}